
Vertex Format

	OK SO the geometry shader face generation implementation is not working out so well. I don't think the memory usage savings is
	even worth the trouble, and this is performing worse than the triangles one anyway!

===QUADS===

	0000 0000 0000 0000 0000 0000 0000 0000
	xxxx xxxx zzzz zzzz xxxx xxxx zzzz zzzz

	0000 0000 0000 0000 0000 0000 0000 0000
	xxxx xxxx zzzz zzzz xxxx xxxx zzzz zzzz

	0000 0000 0000 0000 0000 0000 0000 0000
	yyyy yyyy yyyy yyyy yyyy yyyy uuuu uuuu

	0000 0000 0000 0000 0000 0000 0000 0000
	yyyy yyyy yyyy yyyy yyyy yyyy vvvv vvvv

	q

	0000 0000 0000 0000 0000 0000 0000 0000
	tttt tttt tttt tttt           aoao aoao

	0000 0000 0000 0000 0000 0000 0000 0000
	l0l0 l0l0 l1l1 l1l1 l2l2 l2l2 l3l3 l3l3


===FACE APPROACH===

	Each face represented as a uvec4

	u32                                     | u32                                     | u32
	256|32    256|32    256       256       | 4096|512       4096           4 4  4 4  | 256       256       256       256
	0000 0000 0000 0000 0000 0000 0000 0000 | 0000 0000 0000 0000 0000 0000 0000 0000 | 0000 0000 0000 0000 0000 0000 0000 0000
	xxxx xxxx zzzz zzzz uuuu uuuu vvvv vvvv | yyyy yyyy yyyy tttt tttt tttt a0a1 a2a3 | tttt tttt uuuu uuuu vvvv vvvv tttt tttt

	u32                                    
	
	0000 0000 0000 0000 0000 0000 0000 0000
	ddbf 0000 0001 1111 1122 2222 2333 3333

	Microblocks -> 8 units / voxel, meaning X/Y/Z/U/V are divided by 8, and UV patches can only be XZ sized (32x32)

	Chunk is 32x32x512

	Do we want to modify this for LOD?

	The geometry shader approach is actually like 30% slower than everything per-vertex. However, it does use 4x less GPU memory...



00 0 0
01 1 1
10 2 -0
11 3 -1

